#1.load the matrix(Safe)returnList=[]data = open('C:/Users/Jianyi/Documents/week3/kargerMinCut.txt')for eachLine in data.readlines():    eachLine=eachLine.rstrip('\n')    returnList.append((eachLine))Matrix=[]for i in range(0,200):    a=[int(s) for s in returnList[i].split() if s.isdigit()]    Matrix.append(a)#Let's test for a small matrix    #Matrix=list([[1,2,4],[2,1,3],[3,2,4],[4,1,3]])#2.Randomly select two nodes to mergefrom random import randrange#initiate mincutmincut=100000000for cycle in range(0,4000000):    #print("cycle=",cycle)        #converge 199 times until there are only two nodes left    for i in range(0,len(Matrix)-2):        #(1)choose two nodes randomly to converge, let everything connected to the second node connected to the first one, then delete the second node        a=randrange(0,len(Matrix))#a is the index in Matrix of first node        node2=Matrix[a][randrange(1,len(Matrix[a]))]            b=201        for u in range(0,len(Matrix)):            if Matrix[u][0]== node2:                b=u        ##print(a,node2,b)                ##print("a=",a,";b=",b,";converge node",Matrix[a][0]," and node ",Matrix[b][0])                #(2)converge the two nodes        #(a). eliminate all connections between the two nodes        for index in range(len(Matrix[a])-1,-1,-1):            if Matrix[a][index] == Matrix[b][0]:                Matrix[a].pop(index)                for index in range(len(Matrix[b])-1,-1,-1):            if Matrix[b][index] == Matrix[a][0]:                Matrix[b].pop(index)        ##print("after 2(a) elimination, the matrix is",Matrix)        #(b)let the ath node connect to everything the bth node connects to, then delete b        #Prepare the bth node as a whole package to give to the ath one, namely, all elements except for the first node index and the 1nd element.        node_b=Matrix[b].pop(0)        node_a=Matrix[a][0]        #merge bth node connection into ath node, using the idea of merge sort        for m in range(len(Matrix[b])-1,-1,-1):            Matrix[a].append(Matrix[b].pop(m))        #print("after 2(b) merging, the matrix is", Matrix)        Matrix.pop(b)                ##print("After Merge,Matrix is", Matrix, ", finish merging")        #(c). replace all node b in Matrix to node a, excepted for node b in node a, which got deleted        for j in range(0,len(Matrix)):            for k in range(0,len(Matrix[j])):                if  Matrix[j][k] == node_b:                    Matrix[j][k] = node_a        ##print("finish replacing, now matrix is ", Matrix)        ##print("=====finish a round======")    #print( "Mincut",len(Matrix[1])-1)           if len(Matrix[0])-1<mincut:        mincut=len(Matrix[0])-1print( "Mincut",mincut)   